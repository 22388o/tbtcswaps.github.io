{"version":3,"sources":["views/AlertDialog/AlertDialog.tsx","views/Footer/Footer.tsx","contracts/deployedAddresses.ts","views/Swap/Invoice.tsx","views/Swap/Swap.tsx","views/Operate/InputField.tsx","views/Operate/Operate.tsx","views/Widget/Widget.tsx","views/UserAddress/UserAddress.tsx","App.tsx","serviceWorker.ts","index.tsx","views/Swap/lightning.png","views/Swap/tBTC.png"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","AlertDialog","Dialog","open","TransitionComponent","keepMounted","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","id","title","DialogContent","DialogContentText","children","DialogActions","Button","onClick","color","autoFocus","Footer","useState","dialog","setDialog","href","type","className","tbtcAddress","ln2tbtcAddress","web3","invoice","paymentHash","tBTCAmount","operatorAddress","a","ln2tbtcContract","eth","Contract","ln2tbtcABI","abi","tbtcContract","tbtcABI","userAddress","currentProvider","selectedAddress","methods","approve","send","from","createTBTC2LNSwap","Invoice","result","setInvoice","error","decode","e","TextField","label","helperText","undefined","multiline","rowsMax","variant","onChange","event","target","value","Divider","valueSat","size","createSwap","toString","useStyles","makeStyles","theme","createStyles","root","margin","spacing","switchIcon","height","wideTextField","width","getLogoSize","ln","sharedInputProps","InputLabelProps","shrink","Web3","providers","HttpProvider","contract","Number","getOperatorListLength","call","length","indexArray","Array","_","i","Promise","all","map","index","operatorList","then","operators","calculateLowestSwap","fromAmount","fromLN","console","log","selectedOps","op","amount","linearFee","constantFee","totalProvided","filter","opBalance","tBTCBalance","lnBalance","sort","b","Swap","selectedOperator","classes","setFromLN","stage","setStage","setFromAmount","setOperators","getOperators","Grid","container","item","xs","noValidate","autoComplete","inputProps","step","min","InputProps","endAdornment","InputAdornment","position","src","lnLogo","tbtcLogo","alt","readOnly","IconButton","aria-label","fontSize","disabled","String","InputField","name","logo","marginTop","generateInputHandler","state","setState","field","newValue","operatorInfo","operatorRegister","publicUrl","Operate","setOperatorInfo","exists","registerOperator","TabPanel","other","role","hidden","Box","p","Typography","component","a11yProps","backgroundColor","palette","background","paper","top","Widget","useTheme","setValue","connectWalletButton","connectWallet","AppBar","Tabs","indicatorColor","textColor","Tab","axis","onChangeIndex","dir","UserAddress","App","setWeb3","walletError","setWalletError","window","ethereum","request","method","accounts","Error","enable","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.b5f2aa4a.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialog(props: {\n  title: string;\n  children: React.ReactElement<any, any>;\n  open: boolean;\n  handleClose: () => void;\n}) {\n  return (\n    <Dialog\n      open={props.open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={props.handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleClose} color=\"primary\" autoFocus>\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport AlertDialog from \"../AlertDialog/AlertDialog\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  const [dialog, setDialog] = React.useState<\"about\" | \"contact\" | null>(null);\n\n  const handleClose = () => {\n    setDialog(null);\n  };\n  const a = <>a</>;\n  return (\n    <footer>\n      <a href=\"https://github.com/corollari/ln2tBTC\">Code</a>&nbsp;·&nbsp;\n      <a href=\"https://github.com/corollari/ln2tBTC/blob/master/README.md\">\n        Docs\n      </a>\n      &nbsp;·&nbsp;\n      <button\n        type=\"button\"\n        className=\"link-button\"\n        onClick={() => setDialog(\"about\")}\n      >\n        About\n      </button>\n      &nbsp;·&nbsp;\n      <button\n        type=\"button\"\n        className=\"link-button\"\n        onClick={() => setDialog(\"contact\")}\n      >\n        Contact us\n      </button>\n      <AlertDialog\n        title={dialog === \"about\" ? \"About\" : \"Contact us\"}\n        open={dialog !== null}\n        handleClose={handleClose}\n      >\n        {dialog === \"about\" ? (\n          <>\n            LN2tBTC is a decentralized service that enables trustless swaps\n            between tBTC and BTC on the lightning network.\n            <br />\n            <br />\n            It is based on a protocol derived from submarine swaps and it's\n            served by a network of liquidity providers that anyone can join.\n            <br />\n            <br />\n            If you'd like to learn more about how everything works check out our{\" \"}\n            <a href=\"https://github.com/corollari/ln2tBTC/blob/master/README.md\">\n              our docs\n            </a>\n            .\n          </>\n        ) : (\n          <>\n            Just drop a message on{\" \"}\n            <a href=\"https://discord.com/channels/590951101600235531/681226760209432608/748490345217654786\">\n              Keep's discord\n            </a>{\" \"}\n            tagging me (@corollari#2127) or send me an email at\n            admin@ln2tbtc.com\n          </>\n        )}\n      </AlertDialog>\n    </footer>\n  );\n}\n","export const tbtcAddress = \"0x179eabC663E7d282eF1d25bfcBdA19e5d210E7D7\";\nexport const ln2tbtcAddress = \"0xE35d566fA32A47Ef75aeF9A890CBC70666625147\";\n","import React from \"react\";\nimport Web3 from 'web3';\nimport { Ln2tbtcContract, ERC20Contract } from \"../../ethereum\";\nimport TextField from '@material-ui/core/TextField';\nimport { decode } from '@node-lightning/invoice';\nimport Button from \"@material-ui/core/Button\";\nimport Divider from '@material-ui/core/Divider';\nimport ln2tbtcABI from '../../contracts/LN2tBTC.json'\nimport tbtcABI from '../../contracts/IERC20.json'\nimport type { AbiItem } from 'web3-utils'\nimport { tbtcAddress, ln2tbtcAddress } from '../../contracts/deployedAddresses'\nimport \"./Invoice.css\";\n\nasync function createSwap(web3: Web3,  invoice: string, paymentHash:string, tBTCAmount:string, operatorAddress:string) {\n    const ln2tbtcContract: Ln2tbtcContract = new web3.eth.Contract(ln2tbtcABI.abi as AbiItem[], ln2tbtcAddress);\n    const tbtcContract: ERC20Contract = new web3.eth.Contract(tbtcABI.abi as AbiItem[], tbtcAddress);\n    const userAddress = (web3.currentProvider as any).selectedAddress;\n    await tbtcContract.methods.approve(ln2tbtcAddress, tBTCAmount).send({\n        from: userAddress\n    })\n    await ln2tbtcContract.methods.createTBTC2LNSwap(paymentHash, tBTCAmount, operatorAddress, invoice).send({\n        from: userAddress\n    });\n}\n\nexport default function Invoice(props: { web3: Web3, tBTCAmount:string, operatorAddress:string }) {\n    const [invoice, setInvoice] = React.useState<string>('')\n    let error = false;\n    let result: ReturnType<typeof decode>;\n    if (invoice !== \"\") {\n        try {\n            result = decode(invoice);\n        } catch (e) {\n            error = true;\n        }\n    }\n    return <>\n        <TextField\n            id=\"filled-multiline-flexible\"\n            label=\"Lightning Invoice\"\n            error={error}\n            helperText={error ? \"Invoice is incorrect\" : undefined}\n            multiline\n            rowsMax={8}\n            variant=\"filled\"\n            onChange={(event) => setInvoice(event.target.value)}\n            className=\"wideTextField\"\n        />\n        {invoice !== \"\" && error === false ? <>\n            <Divider />\n            Value: {result!.valueSat}<br />\n            Payment Hash: {result!.paymentHash}\n            <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => createSwap(props.web3, invoice, result!.paymentHash.toString(), props.tBTCAmount, props.operatorAddress)}>\n                Swap\n            </Button>\n        </> : undefined}\n    </>\n}","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport lnLogo from \"./lightning.png\";\nimport tbtcLogo from \"./tBTC.png\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport SwapVertIcon from \"@material-ui/icons/SwapVert\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Web3Provider, Operator, Ln2tbtcContract } from \"../../ethereum\";\nimport Web3 from \"web3\";\nimport ln2tbtcABI from '../../contracts/LN2tBTC.json'\nimport type { AbiItem } from 'web3-utils'\nimport { ln2tbtcAddress } from '../../contracts/deployedAddresses'\nimport Invoice from './Invoice'\nimport \"./Swap.css\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"& > *\": {\n        margin: theme.spacing(1),\n        //width: '25ch',\n      },\n    },\n    switchIcon: {\n      height: \"100%\",\n    },\n    wideTextField: {\n      width: \"100%\",\n    },\n  })\n);\n\nfunction getLogoSize(ln: boolean) {\n  return ln ? 20 : 30;\n}\n\nconst sharedInputProps = {\n  type: \"number\",\n  variant: \"outlined\" as const,\n  InputLabelProps: {\n    shrink: true,\n  },\n};\n\nasync function getOperators(): Promise<Operator[]> {\n  const web3 = new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/965c5ec028c84ffcb22c799eddba83a4'));\n  const contract = new web3.eth.Contract(ln2tbtcABI.abi as AbiItem[], ln2tbtcAddress) as Ln2tbtcContract;\n  const length = Number(await contract.methods.getOperatorListLength().call());\n  const indexArray = Array.from(Array(length), (_, i) => i);\n  const operators = await Promise.all(indexArray.map(index =>\n    contract.methods.operatorList(index).call().then(\n      operatorAddress => contract.methods.operators(operatorAddress).call()\n    )\n  )\n  );\n  return operators;\n}\n\nfunction removeFees(amount: number, linearFee: number, constantFee: number) {\n  return (((amount * 10 ** 8 - constantFee) * 10 ** 8) / (10 ** 8 + linearFee));\n}\n\nfunction calculateLowestSwap(operators: Operator[], fromAmount: number, fromLN: boolean) {\n  console.log(fromAmount)\n  const selectedOps = operators.map(op => {\n    const totalProvided = removeFees(fromAmount, Number(op.linearFee), Number(op.constantFee));\n    console.log(totalProvided)\n    return {\n      ...op,\n      totalProvided\n    };\n  }).filter(op => {\n    const opBalance = fromLN ? op.tBTCBalance : op.lnBalance;\n    return Number(opBalance) > op.totalProvided && op.totalProvided > 0;\n  }).sort((a, b) => b.totalProvided - a.totalProvided) // From highest to lowest\n  if (selectedOps.length === 0) {\n    return undefined\n  } else {\n    return selectedOps[0];\n  }\n}\n\nexport default function Swap(props: { web3: Web3Provider }) {\n  const classes = useStyles();\n  const [fromLN, setFromLN] = React.useState(false);\n  const [stage, setStage] = React.useState<'initial' | 'invoice'>('initial');\n  const [fromAmount, setFromAmount] = React.useState<number | null>(null);\n  const [operators, setOperators] = React.useState<Operator[] | null>(null);\n  if (operators === null) {\n    getOperators().then(setOperators);\n  }\n  let selectedOperator: ReturnType<typeof calculateLowestSwap> | undefined;\n  let error = false;\n  if (fromAmount === null || fromAmount === 0 || operators === null) {\n    selectedOperator = undefined;\n  } else {\n    selectedOperator = calculateLowestSwap(operators, fromAmount, fromLN);\n    if (selectedOperator === undefined) {\n      error = true;\n    }\n  }\n  if (stage === 'initial') {\n    return (\n      <>\n        <Grid container spacing={3}>\n          <Grid item xs={9}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n              <TextField\n                label=\"From\"\n                {...sharedInputProps}\n                className={classes.wideTextField}\n                error={error}\n                helperText={error ? \"No operator provides enough liquidity to swap this much\" : undefined}\n                onChange={(event) => setFromAmount(Number(event.target.value))}\n                inputProps={{\n                  step: 0.001,\n                  min: 0,\n                }}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <img\n                        src={fromLN ? lnLogo : tbtcLogo}\n                        height={getLogoSize(fromLN)}\n                        alt=\"coin logo\"\n                      />\n                    </InputAdornment>\n                  ),\n                }}\n              />\n              <TextField\n                label=\"To\"\n                {...sharedInputProps}\n                className={classes.wideTextField}\n                value={selectedOperator === undefined ? '' : selectedOperator.totalProvided / 10 ** 8}\n                InputProps={{\n                  readOnly: true,\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <img\n                        src={fromLN ? tbtcLogo : lnLogo}\n                        height={getLogoSize(!fromLN)}\n                        alt=\"coin logo\"\n                      />\n                    </InputAdornment>\n                  ),\n                }}\n                inputProps={{\n                  step: 0.001,\n                  min: 0,\n                }}\n              />\n            </form>\n          </Grid>\n          <Grid item xs={3}>\n            <IconButton\n              aria-label=\"switch\"\n              onClick={() => setFromLN(!fromLN)}\n              className={classes.switchIcon}\n            >\n              <SwapVertIcon fontSize=\"large\" />\n            </IconButton>\n          </Grid>\n        </Grid>\n        {props.web3 === null ? undefined : (\n          <Button variant=\"contained\" color=\"primary\" size=\"large\" disabled={error} onClick={() => {\n            if (error === false) {\n              setStage('invoice')\n            }\n          }}>\n            Swap\n          </Button>\n        )}\n      </>\n    );\n  } else if (stage === 'invoice' && props.web3 !== null) {\n    return <Grid container spacing={3}>\n    <Grid item xs={12}><Invoice web3={props.web3} operatorAddress={'0xCD8dD5596b8c83A6a98C9A8Cf33d2565d4c43A9A'} tBTCAmount={String(fromAmount!*10**8)}/></Grid></Grid>\n  } else {\n    return <></>\n  }\n}\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        wideTextField: {\n            width: \"100%\",\n        },\n    })\n);\n\nexport default function InputField(props: { name: string, logo?: string, type?:string, onChange:(val:string)=>void }) {\n    const classes = useStyles();\n    return <Grid item xs={12}>\n        <TextField\n            label={props.name}\n            type={props.type ?? \"number\"}\n            variant=\"outlined\"\n            className={classes.wideTextField}\n            onChange={(event)=>props.onChange(event.target.value)}\n            inputProps={{\n                step: 0.001,\n                min: 0,\n            }}\n            InputProps={props.logo !== undefined ? {\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <img\n                            src={props.logo}\n                            height={20}\n                            alt=\"coin logo\"\n                        />\n                    </InputAdornment>\n                ),\n            } : undefined}\n        />\n    </Grid>\n}","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport ln2tbtcABI from '../../contracts/LN2tBTC.json'\nimport tbtcABI from '../../contracts/IERC20.json'\nimport type { AbiItem } from 'web3-utils'\nimport { tbtcAddress, ln2tbtcAddress } from '../../contracts/deployedAddresses'\nimport lnLogo from \"../Swap/lightning.png\";\nimport tbtcLogo from \"../Swap/tBTC.png\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputField from \"./InputField\"\nimport { Web3Provider, Operator, Ln2tbtcContract, ERC20Contract } from \"../../ethereum\";\n\nlet ln2tbtcContract: Ln2tbtcContract | null = null;\nlet tbtcContract: ERC20Contract | null = null;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      'margin-button':{\n        marginTop:'1em'\n      }\n    })\n);\n\nfunction generateInputHandler(state:Object, setState:Function, field:string){\n  return (newValue:string)=>setState({\n    ...state,\n    [field]:newValue\n  })\n}\n\nasync function registerOperator(operatorInfo:Operator, operatorAddress:string, ln2tbtcContract: Ln2tbtcContract, tbtcContract: ERC20Contract){\n  if(Number(operatorInfo.tBTCBalance)!==0){\n    await tbtcContract.methods.approve(ln2tbtcAddress, operatorInfo.tBTCBalance).send({\n      from: operatorAddress\n    });\n  }\n  await ln2tbtcContract.methods.operatorRegister(operatorInfo.tBTCBalance, operatorInfo.lnBalance, operatorInfo.linearFee, operatorInfo.constantFee, operatorInfo.publicUrl).send({\n    from: operatorAddress\n  });\n}\n\nexport default function Operate(props: { web3: Web3Provider }) {\n  const [operatorInfo, setOperatorInfo] = React.useState<Operator | null>(null);\n  const classes = useStyles();\n  if (props.web3 === null) {\n    return <></>\n  }\n  // Avoid initializing contracts several times\n  if (ln2tbtcContract === null) {\n    ln2tbtcContract = new props.web3.eth.Contract(ln2tbtcABI.abi as AbiItem[], ln2tbtcAddress);\n  }\n  if (tbtcContract === null) {\n    tbtcContract = new props.web3.eth.Contract(tbtcABI.abi as AbiItem[], tbtcAddress);\n  }\n  const userAddress = (props.web3.currentProvider as any).selectedAddress;\n  if (operatorInfo === null) {\n    ln2tbtcContract.methods.operators(userAddress).call().then(setOperatorInfo);\n    return <>Loading...</>\n  }\n  if (operatorInfo.exists) {\n    return <Grid container spacing={3}>\n    </Grid>\n  } else {\n    return <><Grid container spacing={3}>\n      <InputField name=\"LN Balance\" logo={lnLogo} onChange={generateInputHandler(operatorInfo, setOperatorInfo, \"lnBalance\")}/>\n      <InputField name=\"tBTC Balance\" logo={tbtcLogo} onChange={generateInputHandler(operatorInfo, setOperatorInfo, \"tBTCBalance\")}/>\n      <InputField name=\"Linear Fee\" onChange={generateInputHandler(operatorInfo, setOperatorInfo, \"linearFee\")}/>\n      <InputField name=\"Constant Fee\" onChange={generateInputHandler(operatorInfo, setOperatorInfo, \"constantFee\")}/>\n      <InputField name=\"Node URL\" type=\"text\" onChange={generateInputHandler(operatorInfo, setOperatorInfo, \"publicUrl\")}/>\n    </Grid>\n      <Button className={classes[\"margin-button\"]} variant=\"contained\" color=\"primary\" size=\"large\" onClick={()=>registerOperator(operatorInfo, userAddress, ln2tbtcContract!, tbtcContract!)}>\n        Register\n      </Button>\n    </>\n  }\n}\n","import React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport { makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Swap from \"../Swap/Swap\";\nimport Operate from \"../Operate/Operate\";\nimport { Web3Provider } from \"../../ethereum\";\nimport Button from \"@material-ui/core/Button\";\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  dir?: string;\n  index: any;\n  value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography component={\"span\"}>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: '100%',\n    'max-width': 500,\n    \"box-shadow\": \"0px 0px 16px 6px rgba(0, 0, 139, .4)\",\n    position:'absolute',\n    top: '20%'\n  },\n}));\n\nexport default function Widget(props: {\n  web3: Web3Provider;\n  connectWallet: () => void;\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index: number) => {\n    setValue(index);\n  };\n\n  const connectWalletButton =\n    props.web3 !== null ? undefined : (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        onClick={props.connectWallet}\n      >\n        Connect Wallet\n      </Button>\n    );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n        >\n          <Tab label=\"Swap\" {...a11yProps(0)} />\n          <Tab label=\"Operate\" {...a11yProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          <Swap web3={props.web3} />\n          {connectWalletButton}\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          <Operate web3={props.web3} />\n          {connectWalletButton}\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Web3Provider } from \"../../ethereum\";\nimport \"./UserAddress.css\";\n\nexport default function UserAddress(props: { web3: Web3Provider }) {\n  return (\n    <div className=\"top-right\">\n      {props.web3 === null\n        ? \"\"\n        : (props.web3.currentProvider as any).selectedAddress}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Footer from \"./views/Footer/Footer\";\nimport Widget from \"./views/Widget/Widget\";\nimport UserAddress from \"./views/UserAddress/UserAddress\";\nimport AlertDialog from \"./views/AlertDialog/AlertDialog\";\nimport Web3 from \"web3\";\nimport { Web3Provider } from \"./ethereum\";\nimport \"./App.css\";\n\nfunction App() {\n  const [web3, setWeb3] = useState<Web3Provider>(null);\n  const [walletError, setWalletError] = useState<null | React.ReactElement<\n    any,\n    any\n  >>(null);\n  if (web3 === null) {\n    // Auto-login if the ethereum provider has already approved us before\n    window.ethereum?.request({ method: \"eth_accounts\" }).then((accounts) => {\n      if (accounts.length > 0) {\n        setWeb3(new Web3(window.ethereum as any));\n      }\n    });\n  }\n  const connectWallet = () => {\n    if (web3 !== null) {\n      throw new Error(\"Wallet already connected\");\n    }\n    if (window.ethereum === undefined) {\n      setWalletError(\n        <>\n          You must have MetaMask installed to use this product, get it{\" \"}\n          <a href=\"https://metamask.io/\">here</a>\n        </>\n      );\n      return;\n    }\n    window.ethereum\n      .enable()\n      .then(() => setWeb3(new Web3(window.ethereum as any)));\n  };\n  return (\n    <div className=\"App\">\n      <UserAddress web3={web3} />\n      <Widget {...{ web3, connectWallet }} />\n      <Footer />\n      <AlertDialog\n        title=\"Error\"\n        open={walletError !== null}\n        handleClose={() => setWalletError(null)}\n      >\n        {walletError ?? <>Good</>}\n      </AlertDialog>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lightning.e641e8b5.png\";","module.exports = __webpack_public_path__ + \"static/media/tBTC.bc04593f.png\";"],"sourceRoot":""}